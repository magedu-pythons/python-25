3、以下代码输出什么，请解释原因(写到问题下方):
li = [ [ ] ] * 5
In [71]: li
Out[71]: [[], [], [], [], []]
li[0].append(10)
print(li)
In [72]: li[0].append(10)
In [73]: li
Out[73]: [[10], [10], [10], [10], [10]]
原因：对[]进行五次浅拷贝,li中5个元素对应的内存地址一样，一个发生改变，其余的都发生改变
li[1].append(20)
print(li)
In [94]: li
Out[94]: [[10, 20], [10, 20], [10, 20], [10, 20], [10, 20]]
原因：同上，第一个元素追加
li.append(30)
print(li) 
In [96]: li
Out[96]: [[10, 20], [10, 20], [10, 20], [10, 20], [10, 20], 30]
原因：不指定列表下标索引，默认在列表最后追加元素


阿飞老师的点评
基本概念都理解的很到位，可以扩展一下思路，看一下其他python基本数据结构是否有同样的特性，然后进行归纳总结。
