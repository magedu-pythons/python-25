作业：自己实现python自带的map、zip和filter函数

#自己写有难度，先把三个函数的实现列出来
1、
#map() 会根据提供的函数对指定序列做映射。
def square(x) :            # 计算立方数
    return x ** 3
lst=list(map(square, [1,2,3,4,5]))
print(lst)

2、

#zip() 函数用于将可迭代的对象作为参数，将对象中对应的元素打包成一个个元组，然后返回由这些元组组成的列表。
#如果各个迭代器的元素个数不一致，则返回列表长度与最短的对象相同，利用 * 号操作符，可以将元组解压为列表。
a = [1,2,3]
b = [4,5,6]
c = [4,5,6,7,8]
zipped = list(zip(a,b))#打包为元组的列表
print(zipped)
zipped1 = list(zip(c,b))# 元素个数与最短的列表一致
print(zipped1)
lst1=list(zip(*zipped1))#与 zip 相反，*zipped 可理解为解压，返回二维矩阵式
print(lst1)

3、
#filter() 函数用于过滤序列，过滤掉不符合条件的元素，返回由符合条件元素组成的新列表。
#用filter判断是否是偶数
def is_even(n):
    return n % 2 == 0
lis=list(filter(is_even,[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))
print(lis)




